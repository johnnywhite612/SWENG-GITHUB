{"version":3,"sources":["assets/img/logo.svg","assets/img/searchIcon.svg","fonts/CalibreBlack.woff","fonts/CalibreBold.woff","fonts/CalibreLight.woff","fonts/CalibreMedium.woff","fonts/CalibreRegular.woff","fonts/CalibreSemibold.woff","Routes/Home/Home.js","Components/WeeklyCommitGraph/WeeklyCommitGraph.js","Components/LanguageUsageGraph/LanguageUsageGraph.js","Components/CompareLanguageGraph/CompareLanguageGraph.js","Components/CommitVsDeleteGraph/CommitVsDeleteGraph.js","Routes/Dashboard/Dashboard.js","Components/ProfileResult/ProfileResult.js","Routes/Search/Search.js","App.js","serviceWorker.js","index.js","assets/img/closeBtn.svg"],"names":["module","exports","Home","props","SearchGithubUsers","bind","ReturnKeyPressed","state","searchQuery","e","key","this","input","history","push","pathname","search","className","src","logo","type","placeholder","onKeyDown","onChange","setState","target","value","onClick","searchIcon","React","Component","WeeklyCommitGraph","repos","week","octokit","require","auth","weekTally","forEach","repo","fork","request","user","login","name","then","data","headers","status","element","current","final","day","i","tally","domainPadding","tickValues","tickFormat","dependentAxis","x","y","style","fill","LanguageUsageGraph","languageData","languageStats","sort","a","b","length","slice","preparedData","labelRadius","colorScale","containerComponent","labels","fontSize","CompareLanguageGraph","topLanguage","languageScoresHM","languageScores","console","log","JSON","stringify","get","language","userName","tickLabels","barWidth","CommitVsDeleteGraph","commits","deletions","Array","from","viewBox","standalone","width","height","innerRadius","textAnchor","Dashboard","languages","hideDashboard","languageTags","map","closeBtn","CloseWindow","avatar_url","location","bio","public_repos","followers","following","href","html_url","ProfileResult","viewDashboard","languageCalculations","Map","users","getByUsername","username","repoTotal","repoCount","listLanguages","owner","languageCounts","Object","keys","languageCount","has","currentCount","set","registerScore","increment","languageFilters","showProfile","includes","OpenProfile","hireable","Search","loadingCounter","index","selected","loading","selectedProfile","MAX_SEARCH_LIMIT","SelectLanguage","IncrementLoadCounter","selectedLanguages","update","goBack","q","per_page","page","items","userScores","loadingBar","loadingBarStyle","color","backgroundColor","padding","margin","textAlign","Math","round","dashboardView","profileResults","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1f1bfbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f3838646.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.1aa4186c.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalibreBlack.1ea38e9a.woff\";","module.exports = __webpack_public_path__ + \"static/media/CalibreBold.b99fc08d.woff\";","module.exports = __webpack_public_path__ + \"static/media/CalibreLight.ed571050.woff\";","module.exports = __webpack_public_path__ + \"static/media/CalibreMedium.48619aaa.woff\";","module.exports = __webpack_public_path__ + \"static/media/CalibreRegular.c5b01b24.woff\";","module.exports = __webpack_public_path__ + \"static/media/CalibreSemibold.0cf4497b.woff\";","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./Home.css\";\nimport logo from \"../../assets/img/logo.svg\";\nimport searchIcon from \"../../assets/img/searchIcon.svg\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.SearchGithubUsers = this.SearchGithubUsers.bind(this);\n    this.ReturnKeyPressed = this.ReturnKeyPressed.bind(this);\n    this.state = {\n      searchQuery: null\n    };\n  }\n\n  ReturnKeyPressed(e) {\n    if (e.key === \"Enter\") {\n      this.SearchGithubUsers();\n    }\n  }\n\n  SearchGithubUsers(input) {\n    this.props.history.push({\n      pathname: \"/search\",\n      search: \"\",\n      state: {\n        search: this.state.searchQuery\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <img src={logo} className=\"home__logo\" />\n        <div className=\"home__blurb\">\n          <b>Re(po)cruit © 2019 |</b> A project developed by Jonathan White for\n          the Software Engineering Module (CS3012) in Trinity College. All code\n          and graphic design is my own work.\n        </div>\n        <div className=\"home__centre\">\n          <div className=\"home__title-blurb\">\n            <h1>Hey recruiter!</h1>\n            <h2>Type in your location below to start finding developers...</h2>\n          </div>\n          <div className=\"home__search-bar\">\n            <input\n              type=\"text\"\n              className=\"home__input-box\"\n              placeholder=\"E.g. Dublin, Ireland\"\n              onKeyDown={e => this.ReturnKeyPressed(e)}\n              onChange={e => this.setState({ searchQuery: e.target.value })}\n            />\n            <div\n              className=\"home__search-button\"\n              onClick={() => this.SearchGithubUsers()}\n            >\n              <img src={searchIcon} className=\"home__search-icon\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis } from \"victory\";\n\nexport default class WeeklyCommitGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      week: []\n    };\n  }\n\n  componentDidMount() {\n    const Octokit = require(\"@octokit/rest\");\n    const octokit = new Octokit({\n      auth: \"9f84a0aa8cf6242e3d458f3b76446696b6720d39\" //\"2554723ad1f727badd09e4caa84a1fd4232dd2bc\" //\n    });\n    let weekTally = [0, 0, 0, 0, 0, 0, 0];\n\n    this.props.repos.forEach(repo => {\n      if (repo.fork !== true) {\n        //For each repository, gather the weekly data - if it isn't forked\n        octokit\n          .request(\n            \"GET /repos/\" +\n              this.props.user.login +\n              \"/\" +\n              repo.name +\n              \"/stats/punch_card\"\n          )\n          .then(({ data, headers, status }) => {\n            if (data) {\n              data.forEach(element => {\n                let current = weekTally[element[0]];\n                weekTally[element[0]] = current + element[2];\n              });\n\n              let final = [];\n\n              weekTally.forEach((day, i) => {\n                final.push({ day: i + 1, tally: day });\n              });\n\n              this.setState({ week: final });\n            }\n          })\n          .then(() => {});\n      }\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <VictoryChart domainPadding={15}>\n          <VictoryAxis\n            tickValues={[1, 2, 3, 4, 5, 6, 7]}\n            tickFormat={[\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"]}\n          />\n          <VictoryAxis dependentAxis tickFormat={x => `${x}`} />\n          <VictoryBar\n            data={this.state.week}\n            x=\"day\"\n            y=\"tally\"\n            style={{ data: { fill: \"#f9c73a\" } }}\n          />\n        </VictoryChart>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  VictoryPie,\n  VictoryClipContainer,\n  VictoryChart,\n  VictoryContainer,\n  VictoryGroup\n} from \"victory\";\n\nexport default class LanguageUsageGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    let languageData = this.props.languageStats;\n    //     console.log(\"FIRST: \" + JSON.stringify(languageData));\n\n    languageData.sort(function(a, b) {\n      return b[1] - a[1];\n    });\n    if (languageData.length >= 3) languageData = languageData.slice(0, 3);\n\n    //     console.log(\"THEN: \" + JSON.stringify(languageData));\n\n    let preparedData = [];\n    languageData.forEach(element => {\n      preparedData.push({ x: element[0], y: element[1] });\n    });\n\n    this.setState({ data: preparedData });\n  }\n\n  render() {\n    return (\n      <>\n        {/* <VictoryChart> */}\n        <VictoryPie\n          //     padding={{ left: 50, right: 50 }}\n          data={this.state.data}\n          labelRadius={160}\n          colorScale=\"heatmap\"\n          containerComponent={<VictoryContainer />}\n          //   groupComponent={<VictoryClipContainer />}\n          style={{\n            labels: {\n              fontSize: 30,\n              fill: \"black\"\n            }\n          }}\n        />\n        {/* </VictoryChart> */}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis } from \"victory\";\n\nexport default class CompareLanguageGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topLanguage: []\n    };\n  }\n\n  componentDidMount() {\n    let languageData = this.props.languageStats;\n    let languageScoresHM = this.props.languageScores;\n    console.log(\"FIRST: \" + JSON.stringify(languageData));\n    languageData.sort(function(a, b) {\n      return b[1] - a[1];\n    });\n    if (languageData.length >= 1) {\n      let preparedData = [];\n      preparedData.push({ x: 1, y: languageData[0][1] });\n      preparedData.push({\n        x: 2,\n        y: languageScoresHM.get(languageData[0][0])\n      });\n\n      console.log(\"TOP LANGUAGE: \" + JSON.stringify(preparedData));\n      this.setState({ data: preparedData, language: languageData[0][0] });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"dashboard__extra-1\">\n          <div className=\"dashboard__block-h1\">\n            {this.state.language} - Comparison\n          </div>\n          <div className=\"dashboard__block-h3\">\n            A comparison of this user's top language ({this.state.language}) vs\n            one of the most active users of {this.state.language} in the area.\n          </div>\n          <div className=\"dashboard__extra-2\">\n            <VictoryChart domainPadding={15}>\n              <VictoryAxis\n                tickValues={[1, 2]}\n                tickFormat={[this.props.userName, \"Best in the area\"]}\n                style={{\n                  tickLabels: {\n                    fontSize: 40\n                  }\n                }}\n              />\n              <VictoryBar\n                data={this.state.data}\n                x=\"x\"\n                y=\"y\"\n                style={{\n                  data: { fill: \"#7600ff\" },\n                  labels: {\n                    fontSize: 100,\n                    fill: \"black\"\n                  }\n                }}\n                //       barRatio={1.2}\n                barWidth={150}\n              />\n            </VictoryChart>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { VictoryPie, VictoryLabel, VictoryAxis } from \"victory\";\n\nexport default class CommitVsDeleteGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commits: 0,\n      deletions: 0\n    };\n  }\n\n  componentDidMount() {\n    const Octokit = require(\"@octokit/rest\");\n    const octokit = new Octokit({\n      auth: \"9f84a0aa8cf6242e3d458f3b76446696b6720d39\" //\"2554723ad1f727badd09e4caa84a1fd4232dd2bc\" //\n    });\n    let commits = 0;\n    let deletions = 0;\n\n    this.props.repos.forEach(repo => {\n      if (repo.fork !== true) {\n        //For each repository, gather the weekly data - if it isn't forked\n        octokit\n          .request(\n            \"GET /repos/\" +\n              this.props.user.login +\n              \"/\" +\n              repo.name +\n              \"/stats/code_frequency\"\n          )\n          .then(({ data, headers, status }) => {\n            console.log(\n              \"GET /repos/\" +\n                this.props.user.login +\n                \"/\" +\n                repo.name +\n                \"/stats/code_frequency\"\n            );\n            if (data) {\n              Array.from(data).forEach(element => {\n                commits += element[1];\n                deletions += element[2];\n              });\n              //       console.log(\"Commits: \" + commits + \" Deletions: \" + deletions);\n              if (deletions < 0) deletions *= -1;\n              this.setState({ commits: commits, deletions: deletions });\n            }\n          })\n          .then(() => {});\n      }\n    });\n  }\n\n  render() {\n    let data = [\n      { x: \"Commits\", y: this.state.commits },\n      { x: \"Deletions\", y: this.state.deletions }\n    ];\n    return (\n      <>\n        <div className=\"dashboard__block-h1\">Commits vs Deletions</div>\n        <svg viewBox=\"0 0 400 400\">\n          <VictoryPie\n            standalone={false}\n            width={400}\n            height={400}\n            data={data}\n            innerRadius={68}\n            labelRadius={100}\n            colorScale=\"heatmap\"\n            style={{ labels: { fontSize: 20, fill: \"black\" } }}\n          />\n          <VictoryLabel\n            textAnchor=\"middle\"\n            style={{ fontSize: 20 }}\n            x={200}\n            y={200}\n          />\n        </svg>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport closeBtn from \"../../assets/img/closeBtn.svg\";\nimport \"./Dashboard.css\";\nimport WeeklyCommitGraph from \"../../Components/WeeklyCommitGraph/WeeklyCommitGraph\";\nimport LanguageUsageGraph from \"../../Components/LanguageUsageGraph/LanguageUsageGraph\";\nimport CompareLanguageGraph from \"../../Components/CompareLanguageGraph/CompareLanguageGraph\";\nimport CommitVsDeleteGraph from \"../../Components/CommitVsDeleteGraph/CommitVsDeleteGraph\";\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: [], repos: [], languages: [], languageStats: [] };\n  }\n\n  componentDidMount() {\n    let user = this.props.data.user;\n    let repos = this.props.data.repos;\n    let languages = this.props.data.languages;\n    let languageStats = this.props.data.languageStats;\n    //Here we receive a hashmap of the high scores for the area\n    let languageScoresHM = this.props.languageScores;\n    this.setState({\n      user: user,\n      repos: repos,\n      languages: languages,\n      languageStats: languageStats,\n      languageScoresHM: languageScoresHM\n    });\n  }\n\n  CloseWindow() {\n    this.props.hideDashboard();\n  }\n\n  render() {\n    let user = this.state.user;\n    const languageTags = this.state.languages.map(language => (\n      <div className={\"dashboard__language-item\"}>{language}</div>\n    ));\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"dashboard__back-button\">\n          <img\n            src={closeBtn}\n            className=\"dashboard__close-btn\"\n            onClick={() => this.CloseWindow()}\n          />\n        </div>\n        <div className=\"dashboard__side-bar\">\n          <img src={user.avatar_url} className=\"dashboard__image\" />\n          <div className=\"dashboard__profile-name\">{user.login}</div>\n          <div className=\"dashboard__divider\"></div>\n          <div className=\"dashboard__profile-full-name\">{user.name}</div>\n          <div className=\"dashboard__location\">{user.location}</div>\n\n          <div className=\"dashboard__bio\">{user.bio}</div>\n\n          <div className=\"dashboard__divider dashboard__divider--long\"></div>\n\n          <div className=\"dashboard__public-repos\">\n            Public Repositories: {user.public_repos}\n          </div>\n          <div className=\"dashboard__followers\">\n            <b>Followers: </b>\n            {user.followers}\n          </div>\n          <div className=\"dashboard__following\">\n            <b>Following: </b>\n            {user.following}\n          </div>\n          <div className=\"dashboard__divider dashboard__divider--long\"></div>\n          <div className=\"dashboard__language-title\">Languages:</div>\n\n          <div className=\"dashboard__languages\">{languageTags}</div>\n          <a\n            className=\"dashboard__view-github\"\n            href={user.html_url}\n            target=\"_blank\"\n          >\n            View Full Profile\n          </a>\n        </div>\n        <div className=\"dashboard__main\">\n          <div className=\"dashboard__row\">\n            <div className=\"dashboard__block dashboard__block--block-1\">\n              <div className=\"dashboard__block-h1\">Weekly commit stats</div>\n              <div className=\"dashboard__block-h3\">\n                Frequency of {user.login}'s commits based on week day.\n              </div>\n              <div className=\"dashboard__block-container-1\">\n                <WeeklyCommitGraph\n                  repos={this.props.data.repos}\n                  user={this.props.data.user}\n                />\n              </div>\n            </div>\n            <div className=\"dashboard__block dashboard__block--block-2\">\n              <div className=\"dashboard__block-h1\">Language usage</div>\n              <div className=\"dashboard__block-h3\">\n                {user.login}'s most frequent languages and their percentage use\n                compared.\n              </div>\n              <div className=\"dashboard__block-container-2\">\n                <LanguageUsageGraph\n                  languageStats={this.props.data.languageStats}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"dashboard__row\">\n            <div className=\"dashboard__block dashboard__block--block-3\">\n              <CommitVsDeleteGraph\n                repos={this.props.data.repos}\n                user={this.props.data.user}\n              />\n            </div>\n            <div className=\"dashboard__block dashboard__block--block-4\">\n              <CompareLanguageGraph\n                languageStats={this.props.data.languageStats}\n                languageScores={this.props.languageScores}\n                userName={this.props.data.user.login}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./ProfileResult.css\";\nimport axios from \"axios\";\nexport default class ProfileResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { languages: [], user: [], repos: [], languageStats: [] };\n  }\n\n  OpenProfile() {\n    this.props.viewDashboard(\n      this.state.user,\n      this.state.repos,\n      this.state.languages,\n      this.state.languageStats\n    );\n  }\n\n  componentDidMount() {\n    let masterCount = 0;\n\n    const Octokit = require(\"@octokit/rest\");\n    const octokit = new Octokit({\n      auth: \"9f84a0aa8cf6242e3d458f3b76446696b6720d39\" //\"2554723ad1f727badd09e4caa84a1fd4232dd2bc\" //\n    });\n\n    let repos = [];\n    let languageCalculations = new Map();\n\n    //We'll first get the full profile data for our user\n    octokit.users\n      .getByUsername({\n        username: this.props.user.login\n      })\n      .then(({ data }) => {\n        this.setState({ user: data });\n      });\n\n    octokit\n      .request(\"GET /users/\" + this.props.user.login + \"/repos\")\n      .then(({ data, headers, status }) => {\n        this.setState({ repos: data });\n        data.forEach(repo => {\n          if (repo) repos.push(repo);\n        });\n      })\n      .then(() => {\n        //With our list of repos, get the languages listed under each repo name\n        let repoTotal = repos.length;\n        let repoCount = 0;\n\n        repos.forEach(repo => {\n          //If the repo was forked, we won't consider it as owned by this user\n          if (repo.fork === false) {\n            let selectedRepo = repo.name;\n            octokit.repos\n              .listLanguages({\n                owner: this.props.user.login,\n                repo: repo.name\n              })\n              .then(({ data, headers, status }) => {\n                //The languages for the currently selected repo\n                let languageCounts = data;\n                Object.keys(languageCounts).forEach(language => {\n                  let languageCount = languageCounts[language];\n                  if (languageCalculations.has(language)) {\n                    //Language exists, so we increase the counter score\n                    let currentCount = languageCalculations.get(language);\n                    languageCalculations.set(\n                      language,\n                      (currentCount += languageCount)\n                    );\n                  } else {\n                    //Language doesn't exist, so add it\n                    languageCalculations.set(language, languageCount);\n                  }\n                });\n                //Finished cycling through repo - maybe increment counter\n                repoCount++;\n\n                if (repoCount >= repoTotal) {\n                  this.setState({\n                    languages: [...languageCalculations.keys()],\n                    languageStats: [...languageCalculations]\n                  });\n                  this.props.registerScore([...languageCalculations]);\n                  this.props.increment(this.props.user.login);\n                  ///DO SOMETHING!!\n                  //Increment finished repos and compare\n                  masterCount += 1;\n                  // console.log(masterCount + \" / 50\");\n                }\n              });\n          } else {\n            repoCount++;\n            repoCount++;\n            if (repoCount === repoTotal) {\n              //We have finished analyzing this user, now save their languages to state\n              //Also increment parent component\n              this.setState({\n                languages: [...languageCalculations.keys()],\n                languageStats: [...languageCalculations]\n              });\n              // this.props.registerScore([...languageCalculations]);\n              this.props.increment(this.props.user.login);\n              ///DO SOMETHING!!\n              masterCount += 1;\n            }\n          }\n        });\n      });\n  }\n\n  render() {\n    let user = this.props.user;\n    let languageFilters = this.props.languageFilters;\n\n    let showProfile = true;\n    languageFilters.forEach(language => {\n      if (!this.state.languages.includes(language)) {\n        showProfile = false;\n      }\n    });\n    // console.log(\"HIRE: \" + this.state.user.hireable);\n    if (showProfile) {\n      return (\n        <div className=\"profile\" onClick={() => this.OpenProfile()}>\n          <div className=\"profile__card\">\n            <img src={user.avatar_url} className=\"profile__image\" />\n            <div className=\"profile__h1\">{user.login}</div>\n            <span className=\"profile__h2\">\n              Hireable:{\" \"}\n              <span className=\"profile__h2--normal\">\n                {this.state.user.hireable ? \"YES\" : \"NO\"}\n              </span>\n            </span>\n            <div className=\"profile__divider\"></div>\n            <div className=\"profile__h3\">{this.state.user.bio}</div>\n          </div>\n        </div>\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Profile from \"../../Components/ProfileResult/ProfileResult\";\nimport closeBtn from \"../../assets/img/closeBtn.svg\";\nimport \"./Search.css\";\n\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadingCounter = 0;\n    this.languageScores = new Map();\n    this.state = {\n      languages: [\n        { index: 0, name: \"Java\", selected: false },\n        { index: 1, name: \"Python\", selected: false },\n        { index: 2, name: \"Ruby\", selected: false },\n        { index: 3, name: \"PHP\", selected: false },\n        { index: 4, name: \"JavaScript\", selected: false },\n        { index: 5, name: \"TypeScript\", selected: false },\n        { index: 6, name: \"HTML\", selected: false },\n        { index: 7, name: \"CSS\", selected: false },\n        { index: 8, name: \"Shell\", selected: false },\n        { index: 9, name: \"C\", selected: false },\n        { index: 10, name: \"C++\", selected: false },\n        { index: 11, name: \"C#\", selected: false }\n      ],\n      users: [],\n      loading: true,\n      viewDashboard: false,\n      selectedProfile: {},\n      MAX_SEARCH_LIMIT: 20\n    };\n    this.SelectLanguage = this.SelectLanguage.bind(this);\n    this.IncrementLoadCounter = this.IncrementLoadCounter.bind(this);\n    this.viewDashboard = this.viewDashboard.bind(this);\n    this.hideDashboard = this.hideDashboard.bind(this);\n    this.registerScore = this.registerScore.bind(this);\n  }\n\n  SelectLanguage(index, value) {\n    let selectedLanguages = 0;\n    this.state.languages.forEach(language => {\n      if (language.selected) {\n        selectedLanguages++;\n      }\n    });\n    if (selectedLanguages <= 2 || value === false) {\n      let update = [...this.state.languages];\n      update[index].selected = value;\n      this.setState({ languages: update });\n    }\n  }\n\n  CloseWindow() {\n    this.props.history.goBack();\n  }\n\n  componentDidMount() {\n    let searchQuery = this.props.location.state.search;\n    this.setState({ search: searchQuery });\n\n    const Octokit = require(\"@octokit/rest\");\n    const octokit = new Octokit({\n      auth: \"9f84a0aa8cf6242e3d458f3b76446696b6720d39\" //\"2554723ad1f727badd09e4caa84a1fd4232dd2bc\" //\n    });\n\n    octokit.search\n      .users({\n        q: \"type:user location:\" + searchQuery,\n        per_page: this.state.MAX_SEARCH_LIMIT,\n        page: 1\n      })\n      .then(({ data, headers, status }) => {\n        this.setState({ users: data.items });\n      });\n  }\n\n  IncrementLoadCounter(username) {\n    this.loadingCounter += 1;\n    this.setState({});\n    if (this.loadingCounter >= this.state.MAX_SEARCH_LIMIT - 5) {\n      this.setState({ loading: false });\n    }\n  }\n\n  viewDashboard(user, repos, languages, languageStats) {\n    let selectedProfile = { user, repos, languages, languageStats };\n    this.setState({ viewDashboard: true, selectedProfile: selectedProfile });\n  }\n\n  hideDashboard() {\n    this.setState({ viewDashboard: false });\n  }\n\n  registerScore(userScores) {\n    //We've been given the scores of a user\n    //For each language on the list, compare with the global score for that language\n    // -> if bigger, register the high score\n    userScores.forEach(language => {\n      if (!this.languageScores.has(language[0])) {\n        //If it doesn't have the language yet, register it to the hash map\n        this.languageScores.set(language[0], language[1]);\n      } else {\n        //If it does, check the current score, compare and take appropriate actions\n        let currentScore = this.languageScores.get(language[0]);\n        if (currentScore < language[1]) {\n          //This user has more lines of code and thus wins, register new score\n          this.languageScores.set(language[0], language[1]);\n        } else {\n          //Do nothing!\n        }\n      }\n    });\n  }\n\n  render() {\n    var loadingBarStyle = {\n      height: \"auto\",\n      width:\n        (this.loadingCounter / (this.state.MAX_SEARCH_LIMIT - 3)) * 100 + \"%\",\n      color: \"white\",\n      backgroundColor: \"#E8E8E8\",\n      padding: \"10px\",\n      margin: \"0px\",\n      textAlign: \"center\"\n    };\n    let loadingBar;\n    if (this.state.loading) {\n      loadingBar = (\n        <>\n          <div className=\"search_dimmer\"></div>\n          <div className=\"search__loading-bar\">\n            <div style={loadingBarStyle}>\n              <div className=\"search__loading-text\">\n                {Math.round(\n                  (this.loadingCounter / (this.state.MAX_SEARCH_LIMIT - 3)) *\n                    100\n                ) + \"%\"}{\" \"}\n                - Calculating results...\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      loadingBar = <></>;\n    }\n\n    const languageTags = this.state.languages.map(language => (\n      <div\n        className={\n          language.selected === true\n            ? \"search__language-item search__language-item--highlighted\"\n            : \"search__language-item\"\n        }\n        onClick={() => this.SelectLanguage(language.index, !language.selected)}\n      >\n        {language.name}\n      </div>\n    ));\n\n    let languageFilters = [];\n    this.state.languages.forEach(language => {\n      if (language.selected === true) {\n        languageFilters.push(language.name);\n      }\n    });\n\n    let dashboardView;\n    if (this.state.viewDashboard) {\n      dashboardView = (\n        <Dashboard\n          hideDashboard={this.hideDashboard}\n          data={this.state.selectedProfile}\n          //Pass the hashmap of highest user scores for the stats\n          languageScores={this.languageScores}\n        />\n      );\n    } else {\n      dashboardView = <></>;\n    }\n\n    const profileResults = this.state.users.map(user => (\n      <Profile\n        history={this.props.history}\n        user={user}\n        languageFilters={languageFilters}\n        increment={this.IncrementLoadCounter}\n        viewDashboard={this.viewDashboard}\n        registerScore={this.registerScore}\n      />\n    ));\n\n    return (\n      <>\n        {dashboardView}\n        <div className=\"search\">\n          <div className=\"search__top-bar\">\n            <span className=\"search__title-text\">Location:</span>\n            <span className=\"search__title-search\">{this.state.search}</span>\n            <img\n              src={closeBtn}\n              className=\"search__close-btn\"\n              onClick={() => this.CloseWindow()}\n            />\n          </div>\n          <div className=\"search__bottom-section\">\n            <div className=\"search__side-bar\">\n              <div className=\"search__purple-heading\">Filter by language:</div>\n              <div className=\"search__language-list\">{languageTags}</div>\n              <hr></hr>\n              <div className=\"search__purple-heading\">More info:</div>\n              <div className=\"search__black-body\">\n                This app analyses approximately 50 developers in the searched\n                location. You can filter developers by programming language.\n                Click on a user to the right to view stats about their profile\n                to help judge whether you'd like to hire them or not. If the\n                graphs aren't loading, go back and wait 5 seconds, and then try\n                again. Thank you!\n              </div>\n            </div>\n            <div className=\"search__results-block\">\n              {loadingBar}\n\n              <div className=\"search__results-section\">{profileResults}</div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Routes/Home/Home\";\nimport Search from \"./Routes/Search/Search\";\nimport Dashboard from \"./Routes/Dashboard/Dashboard\";\nimport WeeklyCommitGraph from \"./Components/WeeklyCommitGraph/WeeklyCommitGraph\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/profile\" component={Dashboard} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./fonts/CalibreBlack.woff\";\nimport \"./fonts/CalibreBold.woff\";\nimport \"./fonts/CalibreLight.woff\";\nimport \"./fonts/CalibreMedium.woff\";\nimport \"./fonts/CalibreRegular.woff\";\nimport \"./fonts/CalibreSemibold.woff\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/closeBtn.d8cdfa89.svg\";"],"sourceRoot":""}